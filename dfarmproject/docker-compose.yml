#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  dfarm:

services:
  ca.dfarmadmin.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.dfarmadmin.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dfarmadmin.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0cf67d5ddba4d9502d44f4725eaa4e8ab3d1349af92dcaac25f6600cef4ff218_sk                                                                           
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/dfarmadmin.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.dfarmadmin.com
    networks:
      - dfarm
 
  ca.dfarmretail.com:
    image: hyperledger/fabric-ca
    container_name: ca.dfarmretail.com
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.dfarmretail.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dfarmretail.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/ffa129096e642d6516cc7fa140267f3e516a42011b7f975dde962546cad18289_sk
    ports:
      - "7055:7055"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/dfarmretail.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - dfarm             

  orderer.dfarmadmin.com:
    container_name: orderer.dfarmadmin.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/dfarmadmin.com/orderers/orderer.dfarmadmin.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/dfarmadmin.com/peers/peer0.dfarmadmin.com/:/etc/hyperledger/msp/peerDfarmadmin
    networks:
      - dfarm

  peer0.dfarmadmin.com:
    container_name: peer0.dfarmadmin.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.dfarmadmin.com
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.dfarmadmin.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=DfarmadminMSP
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=//etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.dfarmadmin.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.dfarmadmin.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dfarm
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/dfarmadmin.com/peers/peer0.dfarmadmin.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/dfarmadmin.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.dfarmadmin.com
      - couchdb
    networks:
      - dfarm

  peer0.dfarmretail.com:
    container_name: peer0.dfarmretail.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.dfarmretail.com
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.dfarmretail.com:7051
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODEADDRESS=peer0.dfarmretail.com:8052
      - CORE_PEER_LOCALMSPID=DfarmretailMSP
      - CORE_PEER_MSPCONFIGPATH=//etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.dfarmretail.com:8051
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.dfarmretail.com:8051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dfarm
      # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5985
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/dfarmretail.com/peers/peer0.dfarmretail.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/dfarmretail.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.dfarmadmin.com
      - couchdb
    networks:
      - dfarm    

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
      - 5985:5985
    networks:
      - dfarm


  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.dfarmadmin.com:7051
      - CORE_PEER_LOCALMSPID=DfarmadminMSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dfarmadmin.com/users/Admin@dfarmadmin.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash 
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        # - ./config:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts

    networks:
        - dfarm
    # depends_on:
    #  - orderer.dfarmadmin.com
    #  - peer0.dfarmadmin.com
    #  - peer0.dfarmretail.com
    #  - couchdb



  cli2:
    container_name: cli2
    image: hyperledger/fabric-tools
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.darmretail.com:8051
      - CORE_PEER_LOCALMSPID=DfarmretailMSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dfarmretail.com/users/Admin@dfarmretail.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - dfarm
    # depends_on:
    #  - orderer.dfarmadmin.com
    #  - peer0.dfarmadmin.com
    #  - peer0.dfarmretail.com
    # #  - couchdb




  # explorerdb.dfarmadmin.com:
  #   image: acloudfan/hlf-explorer
  #   container_name: explorerdb.dfarmadmin.com
  #   hostname: explorerdb.dfarmadmin.com
  #   environment:
  #     - DATABASE_DATABASE=fabricexplorer
  #     - DATABASE_USERNAME=
  #     - DATABASE_PASSWORD=
  #   volumes:
  #     - ./app/persistence/fabric/postgreSQL/db/createdb.sh:/docker-entrypoint-initdb.d/createdb.sh
  #     - /var/run/postgresql:/var/run/postgresql
  #   networks:
  #     - dfarm

  # explorer.dfarmadmin.com:
  #   image: hyperledger/explorer:latest
  #   container_name: explorer.dfarmadmin.com
  #   hostname: explorer.dfarmadmin.com
  #   environment:
  #     - DATABASE_HOST=explorerdb.dfarmadmin.com
  #     - DATABASE_USERNAME=
  #     - DATABASE_PASSWD=password
  #     - DISCOVERY_AS_LOCALHOST=false
  #   volumes:
  #     - ./config.json:/opt/explorer/app/platform/fabric/config.json
  #     - ./connection.json:/opt/explorer/app/platform/fabric/connection-profile
  #     - ./crypto-config/:/tmp/crypto
  #     - /var/run/postgresql:/var/run/postgresql
      
  #   command: sh -c "sleep 16&& node /opt/explorer/main.js && tail -f /dev/null"
  #   ports:
  #     - 8090:8080
  #   networks:
  #     - dfarm

  # Postgres
  # postgresql:
  #   container_name: postgresql
  #   image: postgres:9.5
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #   working_dir: $HOME
  #   volumes:
  #   - ${PWD}/explorer/bins:/home/vagrant/bins
  #   - /var/run/postgresql:/var/run/postgresql
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - dfarm
  
  # explorer:
  #   container_name: explorer
  #   image: acloudfan/hlf-explorer
  #   environment:
  #     - DATABASE_PASSWORD=postgres
  #     - DATABASE_HOST=postgresql
  #   volumes:
  #     - ${PWD}/explorer/bins:/home/vagrant/bins
  #     - ./crypto-config:/vagrant/basic-network/crypto
  #     - /var/run/postgresql:/var/run/postgresql
  #   ports:
  #     - 8080:8080
  #   depends_on: 
  #     - postgresql
  #   networks:
  #     - dfarm


  # # Postgres
  # postgresql:
  #   container_name: postgresql
  #   image: postgres:9.5
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
      
  #   working_dir: $HOME
  #   volumes:
  #   # Folder with genesis block
  #   #- ${PWD}:/etc/postgresql/9.5/main
  #   - $PWD/explorer/bins:/home/vagrant/bins
  #   - /var/run/postgresql:/var/run/postgresql
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - dfarm
  
  # explorer:
  #   container_name: explorer
  #   image: acloudfan/hlf-explorer
  #   environment:
  #     - DATABASE_PASSWORD=postgres
  #     - DATABASE_HOST=postgresql
  #   volumes:
  #     - $PWD/explorer/bins:/home/vagrant/bins
  #     - $PWD/crypto-config:/vagrant/network/crypto
  #     - /var/run/postgresql:/var/run/postgresql
  #   ports:
  #     - 8080:8080
  #   depends_on: 
  #     - postgresql
  #   networks:
  #     - dfarm







     
  explorerdb.dfarm.com:
    image: hyperledger/explorer-db:latest
    container_name: explorerdb.dfarm.com
    hostname: explorerdb.dfarm.com
    environment:
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
    volumes:
      - ${PWD}/blockchain-explorer/app/persistence/fabric/postgreSQL/db/createdb.sh:/docker-entrypoint-initdb.d/createdb.sh
      - /var/run/postgresql:/var/run/postgresql
    networks:
      - dfarm

  explorer.dfarm.com:
    image: hyperledger/explorer:latest
    container_name: explorer.dfarm.com
    hostname: explorer.dfarm.com
    environment:
      - DATABASE_HOST=explorerdb.dfarm.com
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWD=password
      - DISCOVERY_AS_LOCALHOST=false
    volumes:
      - ${PWD}/blockchain-explorer/examples/net1/config.json:/opt/explorer/app/platform/fabric/config.json
      - ${PWD}/blockchain-explorer/examples/net1/connection-profile:/opt/explorer/app/platform/fabric/connection-profile
      - ${PWD}/blockchain-explorer/examples/net1/crypto:/tmp/crypto
  
      # - walletstore:/opt/wallet
    command: sh -c "sleep 16&& node /opt/explorer/main.js && tail -f /dev/null"
    ports:
      - 8080:8080
    networks:
      - dfarm
